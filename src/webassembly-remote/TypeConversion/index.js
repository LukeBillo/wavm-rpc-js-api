// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Number = require("../Data.Number/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Prelude = require("../Prelude/index.js");
var STR = (function () {
    function STR(value0) {
        this.value0 = value0;
    };
    STR.create = function (value0) {
        return new STR(value0);
    };
    return STR;
})();
var I32 = (function () {
    function I32(value0) {
        this.value0 = value0;
    };
    I32.create = function (value0) {
        return new I32(value0);
    };
    return I32;
})();
var F32 = (function () {
    function F32(value0) {
        this.value0 = value0;
    };
    F32.create = function (value0) {
        return new F32(value0);
    };
    return F32;
})();
var ErrorType = (function () {
    function ErrorType() {

    };
    ErrorType.value = new ErrorType();
    return ErrorType;
})();
var convertToWasmType = function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Just && (v.value0 === "str" && v1 instanceof Data_Maybe.Just)) {
            return new STR(v1.value0);
        };
        if (v instanceof Data_Maybe.Just && (v.value0 === "i32.const" && v1 instanceof Data_Maybe.Just)) {
            return I32.create(Data_Maybe.fromMaybe(0)(Data_Int.fromString(v1.value0)));
        };
        if (v instanceof Data_Maybe.Just && (v.value0 === "f32.const" && v1 instanceof Data_Maybe.Just)) {
            return F32.create(Data_Maybe.fromMaybe(0.0)(Data_Number.fromString(v1.value0)));
        };
        return ErrorType.value;
    };
};
var parseResult = function (s) {
    var splits = Data_String_Common.split(" ")(s);
    var resultValue = Data_Array.last(splits);
    var resultType = Data_Array.head(splits);
    return convertToWasmType(resultType)(resultValue);
};
module.exports = {
    STR: STR,
    I32: I32,
    F32: F32,
    ErrorType: ErrorType,
    convertToWasmType: convertToWasmType,
    parseResult: parseResult,
    convertFromWasmType: $foreign.convertFromWasmType
};
